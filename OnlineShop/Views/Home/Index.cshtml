@model OnlineShop.ViewModels.HomeViewModel
    <div class="main-wrapper">

        <!-- Begin Main Header Area -->
        <!-- Main Header Area End Here -->
        <!-- Begin Slider Area -->
        <div class="slider-area">

            <!-- Main Slider -->
            <div class="swiper-container main-slider-2 swiper-arrow with-bg_white">
                <div class="swiper-wrapper">
                    <div class="swiper-slide animation-style-01">
                    <div class="slide-inner bg-height" data-bg-image="//bizweb.dktcdn.net/100/256/244/themes/589543/assets/home-slider-3.jpg?1692780616664">
                            <div class="container">
                                <div class="slide-content">
                                   <div style="height:300px">

                                   </div>
                                    <div class="button-wrap">
                                        <a class="btn btn-custom-size lg-size btn-primary btn-white-hover rounded-0" href="@Url.Action("Index", "Product")">Cửa hàng</a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="swiper-slide animation-style-01">
                    <div class="slide-inner bg-height" style="resize:inherit" data-bg-image="//bizweb.dktcdn.net/100/256/244/themes/589543/assets/home-slider-1.jpg?1692780616664">
                            <div class="container">
                                <div class="slide-content">
                                <div style="height:300px">
                                </div>
                                <div class="button-wrap">
                                    <a class="btn btn-custom-size lg-size btn-primary btn-white-hover rounded-0" href="@Url.Action("Index", "Product")">Cửa hàng</a>
                                </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- Add Pagination -->
                <div class="swiper-pagination with-bg d-md-none"></div>

                <!-- Add Arrows -->
                <div class="swiper-button-next"></div>
                <div class="swiper-button-prev"></div>
            </div>

        </div>
        <!-- Slider Area End Here -->
        <!-- Begin Product Area -->
        <div class="product-area product-style-2 section-space-y-axis-100">
            <div class="container">
                <div class="section-title text-center pb-55">
                    <span class="sub-title text-primary">Sản phẩm mới nhất</span>
                </div>
                <div class="row">
                @{
                    String class_name = "col-xl-3 col-lg-4 col-sm-6 pt-6";
                }
                @{
                    for (var i = 0; i < Model.productList.Count; i++)
                    {

                        
                                                            <div class="@class_name">
                                                                <div class="product-item">
                                                                    <div class="product-img img-zoom-effect">
                                                                        <a asp-controller="Product" asp-action="Detail" asp-route-id="@Model.productList[i].ProductId">
                                                                            <img class="img-full" src="~/upload/images/product/@Model.productList[i].Image" alt="Product Images">
                                                                        </a>
                                                                        <div class="product-add-action">
                                                                            <ul>
                                                                                <li>
                                                                                    <a asp-controller="Product" asp-action="Detail" asp-route-id="@Model.productList[i].ProductId">
                                                                                        <i class="pe-7s-wallet"></i>
                                                                                    </a>
                                                                                </li>
                                                                                <li>
                                                                                    <a asp-controller="Product" asp-action="Detail" asp-route-id="@Model.productList[i].ProductId">
                                                                                        <i class="pe-7s-cart"></i>
                                                                                    </a>
                                                                                </li>
                                                                            </ul>
                                                                        </div>
                                                                    </div>
                                                                    <div class="product-content">
                                                                       
                                                                        @if(Model.productList[i].ProductName.Length < 20)
                                    {
                                                                            <a class="product-name" asp-controller="Product" asp-action="Detail" asp-route-id="@Model.productList[i].ProductId">@Model.productList[i].ProductName </a>
                                                                            <br />
                                    }
                                    else
                                    {
                                                                            <a class="product-name" asp-controller="Product" asp-action="Detail" asp-route-id="@Model.productList[i].ProductId">@Model.productList[i].ProductName</a>
                                    }

                                                                        <div class="price-box pb-1">
                                                                            <span class="new-price">@Model.productList[i].PromotionalPrice.ToString("#,##0") VNĐ</span>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                    }
               }

            </div>
        </div>
        <!-- Product Area End Here -->
        <!-- Begin Shipping Area -->
        <div class="shipping-area section-space-top-100">
            <div class="container">
                <div class="row">
                    <div class="col-lg-4 col-md-6">
                        <div class="shipping-item">
                            <div class="shipping-img">
                                <img src="assets/images/shipping/icon/plane.png" alt="Shipping Icon">
                            </div>
                            <div class="shipping-content">
                                <h5 class="title">Miễn phí vận chuyển</h5>
                                <p class="short-desc mb-0">Free Home Delivery Offer</p>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-4 col-md-6 pt-6 pt-md-0">
                        <div class="shipping-item">
                            <div class="shipping-img">
                                <img src="assets/images/shipping/icon/earphones.png" alt="Shipping Icon">
                            </div>
                            <div class="shipping-content">
                                <h5 class="title">Hỗ trợ online</h5>
                                <p class="short-desc mb-0">Hỗ trợ 24/7 </p>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-4 col-md-6 pt-6 pt-lg-0">
                        <div class="shipping-item">
                            <div class="shipping-img">
                                <img src="assets/images/shipping/icon/shield.png" alt="Shipping Icon">
                            </div>
                            <div class="shipping-content">
                                <h5 class="title">Bảo mật tài khoản</h5>
                                <p class="short-desc mb-0">Tài khoản an toàn</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Shipping Area End Here -->
        <!-- Begin Brand Area -->
        <div class="brand-area section-space-y-axis-100">
            <div class="container">
                <div class="row">
                    <div class="col-lg-12">
                        <div class="swiper-container brand-slider">
                            <div class="swiper-wrapper">
                                <div class="swiper-slide">
                                    <a class="brand-item" href="javascript:void(0)">
                                        <img src="~/assets/images/brand/lenovo.png" alt="Brand Image">
                                    </a>
                                </div>
                                <div class="swiper-slide">
                                    <a class="brand-item" href="javascript:void(0)">
                                    <img src="~/assets/images/brand/dell.png" alt="Brand Image">
                                    </a>
                                </div>
                                <div class="swiper-slide">
                                    <a class="brand-item" href="javascript:void(0)">
                                    <img src="~/assets/images/brand/acer.png" alt="Brand Image">
                                    </a>
                                </div>
                                <div class="swiper-slide">
                                    <a class="brand-item" href="javascript:void(0)">
                                    <img src="~/assets/images/brand/asus.png" alt="Brand Image">
                                    </a>
                                </div>
                                <div class="swiper-slide">
                                    <a class="brand-item" href="javascript:void(0)">
                                    <img src="~/assets/images/brand/sony.png" alt="Brand Image">
                                    </a>
                                </div>
                                <div class="swiper-slide">
                                    <a class="brand-item" href="javascript:void(0)">
                                        <img src="~/assets/images/brand/samsung.png" alt="Brand Image">
                                    </a>
                                </div>
                                 <div class="swiper-slide">
                                    <a class="brand-item" href="javascript:void(0)">
                                    <img src="~/assets/images/brand/apple.png" alt="Brand Image">
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Brand Area End Here -->
        <!-- Begin Scroll To Top -->
        <a class="scroll-to-top" href="">
            <i class="fa fa-chevron-up"></i>
        </a>
        <input type="hidden" id="userId" value="@HttpContextAccessor.HttpContext.Session.GetString("userId")" />
        <!-- Button để mở modal -->
        <button id="openModalBtn" onclick="openModal()">Mở Modal</button>

        <!-- Modal -->
        <div id="myModal" class="modal" style="display: none;">
            <!-- Nội dung modal -->
            <div class="modal-content">
                <span class="close" onclick="closeModal()">&times;</span>
                <h2>PeerJS Video Call Example</h2>
               <input id="callId"/>

                <div class="video-container">
                    <video id="remoteVideo" autoplay playsinline class="remoteVideo"></video>
                    <video id="localVideo" autoplay playsinline class="localVideo"></video>
                    <button onclick="startCall()">Call</button>
                    <button onclick="endCall()">End Call</button>

                </div>
            </div>
        </div>
        
    </div>
    @section scripts{
        <script src="https://cdn.jsdelivr.net/npm/peerjs@1.3.2/dist/peerjs.min.js"></script>

        <script>
            // Mở modal
            function openModal() {
                var modal = document.getElementById("myModal");
                modal.style.display = "block";
            }

            // Đóng modal
            function closeModal() {
                var modal = document.getElementById("myModal");
                modal.style.display = "none";
                // Dừng luồng phương tiện khi đóng modal
                if (localStream) {
                    localStream.getTracks().forEach(track => track.stop());
                }
            }


           
            // Tạo hàm để tạo nút "Xác nhận" và "Hủy bỏ"
            function createButtons(confirmAction, cancelAction) {
                // Tạo div chứa các nút
                var buttonsContainer = document.createElement("div");
                buttonsContainer.className = "modal-buttons";

                // Tạo nút "Xác nhận"
                var confirmButton = document.createElement("button");
                confirmButton.id = "confirm-btn";
                confirmButton.className = "btn btn-primary";
                confirmButton.textContent = "Xác Nhận";
                confirmButton.onclick = function () {
                    confirmAction();
                };

                // Tạo nút "Hủy bỏ"
                var cancelButton = document.createElement("button");
                cancelButton.id = "cancel-btn";
                cancelButton.className = "btn btn-danger";
                cancelButton.textContent = "Hủy Bỏ";
                cancelButton.onclick = function () {
                    cancelAction();
                };

                // Thêm nút vào container
                buttonsContainer.appendChild(confirmButton);
                buttonsContainer.appendChild(cancelButton);

                // Lấy modal và thêm nút vào cuối modal
                var modal = document.getElementById("myModal");
                modal.querySelector(".modal-content").appendChild(buttonsContainer);
            }

         
        </script>
        <script>
            const peer = new Peer();
            let localStream;
            let call;
            var userId = document.getElementById('userId').value;
            // Hiển thị peer ID của người dùng
            peer.on('open', function (id) {               
                if (userId != null) {
                    setPeerId(userId, id);
                }
               
            });

            // Xử lý sự kiện nhấn nút Call
            function startCall() {
                
                var callId = document.getElementById('callId').value;

                // Lấy stream từ camera và microphone của người dùng
                navigator.mediaDevices.getUserMedia({ video: true, audio: true })
                    .then(function (stream) {
                        localStream = stream;
                        var localVideo = document.getElementById('localVideo');
                        localVideo.srcObject = localStream;
                        localVideo.onloadedmetadata = function () {
                            // Kiểm tra xem video có stream hay không
                            if (!localVideo.paused && !localVideo.ended) {
                                localVideo.classList.add('local-video-border'); // Thêm viền màu đỏ
                            }
                        };
                        getPeerId(callId, function (peerId) {
                            // Bắt đầu cuộc gọi
                            call = peer.call(peerId, localStream);
                            call.on('stream', function (remoteStream) {
                                document.getElementById('remoteVideo').srcObject = remoteStream;
                            });
                        })
                        
                    })
                    .catch(function (err) {
                        console.error('Error accessing media devices:', err);
                    });
            }

            // Xử lý sự kiện nhấn nút End Call
            function endCall() {
                // Đóng kết nối
                if (call) {
                    call.close();
                }

                // Tắt video local và remote
                if (localStream) {
                    localStream.getTracks().forEach(function (track) {
                        track.stop();
                    });
                    localStream = null;
                    document.getElementById('localVideo').srcObject = null;
                }
                document.getElementById('remoteVideo').srcObject = null;
                closeModal();
            }

            // Xử lý sự kiện cuộc gọi đến
            peer.on('call', function (incomingCall) {
                function confirmAction() {
                    removeButtons();
                    navigator.mediaDevices.getUserMedia({ video: true, audio: true })
                        .then(function (stream) {
                            localStream = stream;
                            var localVideo = document.getElementById('localVideo');
                            localVideo.srcObject = localStream;
                            if (!localVideo.paused && !localVideo.ended) {
                                localVideo.classList.add('local-video-border'); // Thêm viền màu đỏ
                            }
                            incomingCall.answer(localStream);
                            incomingCall.on('stream', function (remoteStream) {
                                let remoteVideo = document.getElementById('remoteVideo');
                                let checkTimeout;
                                remoteVideo.srcObject = remoteStream;

                            });
                        })
                        .catch(function (err) {
                            console.error('Error accessing media devices:', err);
                        });
                }
                // Hàm xử lý khi nhấn nút "Hủy bỏ"
                function cancelAction() {
                    // Từ chối cuộc gọi
                    incomingCall.close();
                    removeButtons();
                }
                createButtons(confirmAction, cancelAction);
                
               
            });

            // Hàm để xóa phần tử div có class là 'modal-buttons'
            function removeButtons() {
                // Lấy phần tử div có class là 'modal-buttons'
                var buttonsContainer = document.querySelector(".modal-buttons");

                // Kiểm tra xem phần tử tồn tại không
                if (buttonsContainer) {
                    // Xóa phần tử
                    buttonsContainer.remove();
                } 
            }
            function setPeerId(userId, peerId) {
                // Gọi API bằng Ajax
                $.ajax({
                    url: '/api/Firebase/SetPeerId',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({
                        userId: userId,
                        peerId: peerId
                    }),
                    success: function (response) {
                        // Xử lý kết quả thành công
                        console.log(response);
                    },
                    error: function (xhr, textStatus, errorThrown) {
                        // Xử lý lỗi
                        console.error(errorThrown);
                    }
                });
            }
            function getPeerId(userId, callback) {
                $.ajax({
                    url: '/api/Firebase/GetPeerId/' + userId,
                    type: 'GET',
                    success: function (response) {
                        callback(response);
                    },
                    error: function (xhr, status, error) {
                        console.error('Request failed. Status:', status);
                    }
                });
            }
        </script>
    }


      

