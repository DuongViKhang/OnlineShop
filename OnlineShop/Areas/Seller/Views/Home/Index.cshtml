
@{
    ViewData["Title"] = "Index";
    Layout = "~/Areas/Seller/Views/Shared/_SellerLayout.cshtml";
}

<h1 class="h3 mb-3"><strong>Thống kê năm @ViewBag.selectedYear</strong> </h1>

<div class="row">
    <div class="col-xl-2 col-xxl-5 d-flex">
		<div class="col mt-0">
			<select class="form-select" onchange="redirectToSelectedYear(this)">
				<option class="option" hidden>@ViewBag.selectedYear</option>
				@foreach (var year in ViewBag.Years)
				{
					<option class="option" value="@year">@year</option>
				}
			</select>
		</div>
    </div>
</div>
<script>
    function redirectToSelectedYear(selectElement) {
        var selectedYear = selectElement.value;
        window.location.href = '/@ViewContext.RouteData.Values["area"]/Home/Index?selectedYear=' + selectedYear;
    }
</script>
<br/>

<div class="row">
	@*<div class="col-xl-6 col-xxl-5 d-flex">*@
	<div class="col-xl-15 col-xxl-5 d-flex">
		<div class="w-100">
			<div class="row">
				<div class="col-sm-6">
					<div class="card">
						<div class="card-body">
							<div class="row">
								<div class="col mt-0">
									<h5 class="card-title" style="color:black;">Tăng trưởng</h5>
								</div>

								<div class="col-auto">
									<div class="stat text-primary">
										<i class="align-middle" data-feather="trending-up"></i>
									</div>
								</div>
							</div>
							<h1 class="mt-1 mb-3">@ViewBag.growth</h1>
						</div>
					</div>
					<div class="card">
						<div class="card-body">
							<div class="row">
								<div class="col mt-0">
									<h5 class="card-title" style="color:black;">Người dùng</h5>
								</div>

								<div class="col-auto">
									<div class="stat text-primary">
										<i class="align-middle" data-feather="users"></i>
									</div>
								</div>
							</div>
							<h1 class="mt-1 mb-3">@ViewBag.totalUsers</h1>
						</div>
					</div>
				</div>
				<div class="col-sm-6">
					<div class="card">
						<div class="card-body">
							<div class="row">
								<div class="col mt-0">
									<h5 class="card-title" style="color:black;">Doanh thu</h5>
								</div>

								<div class="col-auto">
									<div class="stat text-primary">
										<i class="align-middle" data-feather="dollar-sign"></i>
									</div>
								</div>
							</div>
							<h1 class="mt-1 mb-3">@ViewBag.totalRevenue</h1>
						</div>
					</div>
					<div class="card">
						<div class="card-body">
							<div class="row">
								<div class="col mt-0">
									<h5 class="card-title" style="color:black;">Số đơn hàng</h5>
								</div>

								<div class="col-auto">
									<div class="stat text-primary">
										<i class="align-middle" data-feather="shopping-cart"></i>
									</div>
								</div>
							</div>
							<h1 class="mt-1 mb-3">@ViewBag.totalOrders</h1>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>

<div class="row">
	<div class="col-12 col-md-14 col-xxl-3 d-flex order-1 order-xxl-1"">
		<div class="card flex-fill w-100">
			<div class="card-header">

				<h5 class="card-title mb-0" style="color:black;">Biểu đồ thống kê doanh thu năm @ViewBag.selectedYear</h5>
			</div>
			<div class="card-body py-3">
				<div class="chart chart-sm">
					<canvas id="chartjs-dashboard-line"></canvas>
				</div>
			</div>
		</div>
	</div>
</div>

<div class="row">
	<div class="col-12 col-md-14 col-xxl-3 d-flex order-1 order-xxl-1">
		<div class="card flex-fill">
			<div class="card-header">
				<h1 class="card-title mb-0" style="color:black;">Doanh thu theo tháng trong năm @ViewBag.selectedYear</h1>
			</div>
			<table class="table table-condensed">
    			<thead>
                    <tr>
        				<td class="text-center"><strong>Tháng</strong></td>
						<td class="text-center"><strong>Số sản phẩm đã bán</strong></td>
						<td class="text-center"><strong>Số đơn hàng đã đặt</strong></td>
        				<td class="text-center"><strong>Doanh thu</strong></td>
						<td class="text-center"><strong></strong></td>
                    </tr>
    			</thead>
    			<tbody>
                    @for(var i = 0; i < 12; i++)
                    {
    					<tr>
    						<td class="text-center">Tháng @(i+1)</td>
							<td class="text-center">@ViewBag.monthlySold[i].ToString("#,##0")</td>
							<td class="text-center">@ViewBag.monthlyOrders[i].ToString("#,##0")</td>
    						<td class="text-center">@ViewBag.monthlyRevenue[i].ToString("#,##0") VNĐ</td>
							<td class="text-center"><a href="@Url.Action("MonthDetail", "Home", new { month = @i+1, year = @ViewBag.selectedYear })" class="btn btn-warning">Chi tiết</a></td>
    					</tr>
                    }
					<tr>
    					<td class="no-line text-center"><strong>Tổng doanh thu</strong></td>
						<td class="text-center"><strong></strong></td>
						<td class="text-center"><strong></strong></td>
    					<td class="no-line text-center"><strong>@ViewBag.totalRevenue</strong></td>
						<td class="text-center"><strong></strong></td>
    				</tr>
					<tr>
    					<td class="no-line text-center"><strong>Doanh thu trung bình</strong></td>
						<td class="text-center"><strong></strong></td>
						<td class="text-center"><strong></strong></td>
    					<td class="no-line text-center"><strong>@ViewBag.averageRevenue</strong></td>
						<td class="text-center"><strong></strong></td>
    				</tr>
    			</tbody>
    		</table>
		</div>
	</div>
	@section Scripts {
		
		<script>
			<script src="" ></script>
			var connection = new signalR.HubConnectionBuilder().withUrl("/chathub").build();

			connection.start().then(function () {
				console.log("SignalR connected");
			}).catch(function (err) {
				return console.error(err.toString());
			});
			document.addEventListener("DOMContentLoaded", function () {
				getSessionValue("userId", function (sessionValue) {
					if (!sessionValue) {
						var divToHide = document.getElementById("myChatBox");

						// Ẩn div bằng cách đặt style.display thành "none"
						divToHide.style.display = "none";
					}
				});
			});

			function sendMessage() {
				var userId;
				if (document.getElementById("senderId")) {
					userId = document.getElementById("senderId").value;
				}
				var message = document.getElementById("messageChatInput").value;
				getSessionValue("userId", function (senderId) {
					if (userId && message && senderId) {

						displayMessage("You", message);

						connection.invoke("SendMessageToUser", userId, senderId, message).catch(function (err) {
							console.error(err.toString());
						});
					}
				});
			}

			function displayMessage(sender, message) {
				var chatFull = document.getElementById("chat_fullscreen");
				var chatMsgItem = document.createElement("span");
				chatMsgItem.className = "chat_msg_item chat_msg_item_user";
				chatMsgItem.innerHTML = message;
				chatFull.appendChild(chatMsgItem);
				// Thời gian trước đó
				var previousTime = new Date();
				previousTime.setMinutes(previousTime.getMinutes()); // Giả sử 10 phút trước

				// Tính thời gian đã trôi qua
				var timeElapsed = calculateTimeElapsed(previousTime);

				chatFull.innerHTML += '<div class="status2" style=" margin: 50px -25px 0 0px; float: right;display: block;font - size: 11px; opacity: 0.3;">' + timeElapsed + ' phút trước' + '</div>';
			}

			connection.on("ReceiveMessage", function (senderId, message) {
				var chatFull = document.getElementById("chat_fullscreen");
				var avatarSrc = "/AdminAssets/img/avatars/avatar.jpg";
				// Thời gian trước đó
				var previousTime = new Date();
				previousTime.setMinutes(previousTime.getMinutes() - 10); // Giả sử 10 phút trước

				// Tính thời gian đã trôi qua
				var timeElapsed = calculateTimeElapsed(previousTime);

				if (!document.getElementById("senderId")) {
					// Tạo một phần tử input hidden
					var hiddenInput = document.createElement("input");
					hiddenInput.type = "hidden";
					hiddenInput.id = "senderId";
					hiddenInput.value = senderId; // Đặt giá trị senderId vào input

					document.body.appendChild(hiddenInput);
				}


				var chatMsgItemHTML = '<span class="chat_msg_item chat_msg_item_admin">' +
					'<div class="chat_avatar">' +
					'<img src="' + avatarSrc + '" style="border-radius:5px; max-height:50px; max-width: 50px;" />' +
					'</div>' +
					message +

					'</span>' +
					'<div class="status2" style=" margin: 50px 0 0 -45px; float: left;display: block;font - size: 11px; opacity: 0.3;">' + timeElapsed + ' phút trước' + '</div>';

				var chatFull = document.getElementById("chat_fullscreen");
				chatFull.innerHTML += chatMsgItemHTML;
			});

			function calculateTimeElapsed(previousTime) {
				var currentTime = new Date();
				var elapsedTime = currentTime - previousTime;

				// Chuyển thời gian thành phút
				var minutesElapsed = Math.floor(elapsedTime / (1000 * 60));

				return minutesElapsed;
			}

			function getSessionValue(key, callback) {
				$.ajax({
					url: '/Customer/GetSessionValue?key=' + key,
					type: 'GET',
					success: function (data) {
						// Gọi hàm callback và truyền dữ liệu session vào đó
						callback(data);
					},
					error: function (xhr, status, error) {
						console.error('Error:', error);
					}
				});
			}

			function getSelletInfo(key, callback) {
				var productId = document.getElementById("productId").value;
				// Tạo một request AJAX
				$.ajax({
					url: '/Customer/GetSellerInfo', // Địa chỉ URL của controller và action
					type: 'GET', // Phương thức GET
					data: { productId: productId }, // Dữ liệu gửi đi, productId là tên tham số và productId là giá trị
					success: function (data) { // Hàm được gọi khi request thành công
						console.log(data); // Hiển thị dữ liệu nhận được từ server trong console
					},
					error: function (xhr, status, error) { // Hàm được gọi khi có lỗi xảy ra
						console.error(xhr.responseText); // Hiển thị thông báo lỗi trong console
					}
				});
			}
			/*
			document.getElementById("fab_send").addEventListener("click", function (event) {
				var user = "";
				getSessionValue("userName", function(sessionValue){
					user = sessionValue;
					var message = document.getElementById("messageChatInput").value;
					connection.invoke("SendMessage", user, message).catch(function (err) {
						return console.error(err.toString());
					});
					event.preventDefault();
				});
			});

			connection.on("ReceiveMessage", function (user, message) {
				var encodedMessage = user + " says: " + message;
				var li = document.createElement("li");
				li.textContent = encodedMessage;
				document.getElementById("messagesList").appendChild(li);

				var chatFull = document.getElementById("chat_fullscreen");
				var chatMsgItem = document.createElement("span");
				chatMsgItem.className = "chat_msg_item chat_msg_item_user";
				chatMsgItem.innerHTML = message;
				chatFull.appendChild(chatMsgItem);

				// Cuộn xuống cuối cùng để hiển thị tin nhắn mới nhất
				chatFull.scrollTop = chatFull.scrollHeight;
			});
			*/
			//ChatBox
			hideChat(4);

			$('#prime').click(function () {
				toggleFab();
			});


			//Toggle chat and links
			function toggleFab() {
				$('.prime').toggleClass('zmdi-comment-outline');
				$('.prime').toggleClass('zmdi-close');
				$('.prime').toggleClass('is-active');
				$('.prime').toggleClass('is-visible');
				$('#prime').toggleClass('is-float');
				$('.chat').toggleClass('is-visible');
				$('.fab').toggleClass('is-visible');

			}



			$('#chat_fullscreen_loader').click(function (e) {
				$('.fullscreen').toggleClass('zmdi-window-maximize');
				$('.fullscreen').toggleClass('zmdi-window-restore');
				$('.chat').toggleClass('chat_fullscreen');
				$('.fab').toggleClass('is-hide');
				$('.header_img').toggleClass('change_img');
				$('.img_container').toggleClass('change_img');
				$('.chat_header').toggleClass('chat_header2');
				$('.fab_field').toggleClass('fab_field2');
				$('.chat_converse').toggleClass('chat_converse2');
				//$('#chat_converse').css('display', 'none');
				// $('#chat_body').css('display', 'none');
				// $('#chat_form').css('display', 'none');
				// $('.chat_login').css('display', 'none');
				// $('#chat_fullscreen').css('display', 'block');
			});

			function hideChat(hide) {
				switch (hide) {
					case 0:
						$('#chat_converse').css('display', 'none');
						$('#chat_body').css('display', 'none');
						$('#chat_form').css('display', 'none');
						$('.chat_login').css('display', 'block');
						$('.chat_fullscreen_loader').css('display', 'none');
						$('#chat_fullscreen').css('display', 'none');
						break;
					case 1:
						$('#chat_converse').css('display', 'block');
						$('#chat_body').css('display', 'none');
						$('#chat_form').css('display', 'none');
						$('.chat_login').css('display', 'none');
						$('.chat_fullscreen_loader').css('display', 'block');
						break;
					case 2:
						$('#chat_converse').css('display', 'none');
						$('#chat_body').css('display', 'block');
						$('#chat_form').css('display', 'none');
						$('.chat_login').css('display', 'none');
						$('.chat_fullscreen_loader').css('display', 'block');
						break;
					case 3:
						$('#chat_converse').css('display', 'none');
						$('#chat_body').css('display', 'none');
						$('#chat_form').css('display', 'block');
						$('.chat_login').css('display', 'none');
						$('.chat_fullscreen_loader').css('display', 'block');
						break;
					case 4:
						$('#chat_converse').css('display', 'none');
						$('#chat_body').css('display', 'none');
						$('#chat_form').css('display', 'none');
						$('.chat_login').css('display', 'none');
						$('.chat_fullscreen_loader').css('display', 'block');
						$('#chat_fullscreen').css('display', 'block');
						break;
				}
			}
		</script>
	}

</div>



